<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>XXY</title>
    <link>https://blog.xuxiangyang.com/</link>
    <description>Recent content on XXY</description>
    <image>
      <url>https://blog.xuxiangyang.com/static/images/logo.png</url>
      <link>https://blog.xuxiangyang.com/static/images/logo.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 13 Dec 2021 18:37:00 +0800</lastBuildDate><atom:link href="https://blog.xuxiangyang.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>《Rework》阅读笔记</title>
      <link>https://blog.xuxiangyang.com/posts/%E4%B9%A6%E7%B1%8D/rework-read-note/</link>
      <pubDate>Mon, 13 Dec 2021 18:37:00 +0800</pubDate>
      
      <guid>https://blog.xuxiangyang.com/posts/%E4%B9%A6%E7%B1%8D/rework-read-note/</guid>
      <description>写在前面的话 原书地址 。笔记是以原书目录为结构，每章节的总结。
读完这本书最大的感受就是：
 你自己的事业在业余时间足够了，它不需要很大，只需要能养活自己就好了。 有想法立刻动手做，因为是个小生意，所以不用决定太久以后的事情 不是所有生意都需要融资，你可以为你现在面临的问题做一个产品 关注在生意本身，生意就是要赚钱。 一个事情值得花多少时间？不要一味的投入时间，考虑下真的值得这么多时间吗？ 不要雇人做你自己没有尝试过的工作。  TAKEDOWNS Ignore the real world &amp;ldquo;这个东西现实中肯定行不通&amp;rdquo;，不要管这种想法。 每周10-40个小时的工作你就能验证就足够验证你的想法了，你完全可以在从事你日常工作的同时开展一个副业。 真实世界不是一个地方，通常是你不去尝试的一个借口。
Learning from mistakes is overrated。从错误中学习被高估了 别人的失败只是别人的失败，与你无关。 常见的误解是你需要从失败中中学习，但你真正能学到什么？你可能学到的是如果再做一次，不要做什么，但是这个真的有什么价值吗？你仍然不知道应该做什么。 失败不是成功之母，进化论不是停留在过去的失败上的，他是沿着可行的事情进化的。
Planning is guessing 长期的商业计划是玄幻的，因为有太多不受你控制的因素影响。如果把计划称为猜测（计划的本质），就没有那么大压力了。 Plan 是 让过去驱动未来，会蒙蔽你。 不是说你不应该思考未来或者盘算可能遇到的障碍。做这些是很有价值的训练。只是不觉得你必须写下它来，对它念念不忘。 决定你这周要做什么，而不是今年要做什么。找出接下来组重要的事情然后去做。
Why grow? 公司多少人合适？人多对比人少除了能带来自大以外还有什么呢？公司规模的扩大不应该是目标。 不被担心致力于成就一个小商业。任何一个有用可持续的盈利的商业，不管大小，都是值得自豪的。
Workaholism 工作狂 沉迷工作是思维上的懒惰，甚至可能引发危机 如果你所有的是事情就是工作，那么你就不能作出合理的判断了。 工作狂不是英雄，因为他们没有节省时间，真正的英雄已经回家了，因为他找到了完成事情的更快的方式
Enough with &amp;ldquo;entrepreneurs&amp;rdquo; 企业家已经够多的了 企业家这个名字压力太大了，每一个开启新商务的人不防都叫做开启者。你不需要有什么自立，只是需要一个idea、一点信心、一个开始的动力。
GO Make a dent in the universe 在世界中留一点印记 Scratch your own itch 搔你自己的痒 解决你自己实际遇到的问题是最容易的。
Start making something No time is no excuse 没时间只是借口 Draw a line in the sand 在做事时，记住你为什么做这件事。</description>
    </item>
    
    <item>
      <title>Centos 7 解决 DST Root CA X3 过期问题</title>
      <link>https://blog.xuxiangyang.com/posts/%E8%BF%90%E7%BB%B4/centos-7-%E8%A7%A3%E5%86%B3-dst-root-ca-x3-%E8%BF%87%E6%9C%9F%E9%97%AE%E9%A2%98/</link>
      <pubDate>Fri, 08 Oct 2021 14:27:00 +0800</pubDate>
      
      <guid>https://blog.xuxiangyang.com/posts/%E8%BF%90%E7%BB%B4/centos-7-%E8%A7%A3%E5%86%B3-dst-root-ca-x3-%E8%BF%87%E6%9C%9F%E9%97%AE%E9%A2%98/</guid>
      <description>2021年9月30日 Let&amp;rsquo;s Encrypt的DST Root CA X3 证书过期了。
给我的实际影响是 使用 https://gems.ruby-china.com 没办法安装gem，会报ssl错误。
如果你是openssl 1.1.0 不会遇到这个问题，但centos 7 (我的版本是7.3.1611) 默认安装的是 openssl 1.0.2。
如果机器少，你可以根据 openssl 的博客 手动修改证书。
但我的机器多，手动修改证书也很怕出错，所以可以执行下面的命令
yum update -y ca-certificates &amp;amp;&amp;amp; update-ca-trust 至少需要升级到 2021.2.50-72 版本，其实原理是一样的，只是ca-certificates 在2020-06-09的版本移除了DST Root CA X3</description>
    </item>
    
    <item>
      <title>如何用RaspberryPI控制Arduino</title>
      <link>https://blog.xuxiangyang.com/posts/diy/%E5%A6%82%E4%BD%95%E7%94%A8raspberrypi%E6%8E%A7%E5%88%B6arduino/</link>
      <pubDate>Sat, 14 Aug 2021 14:39:00 +0800</pubDate>
      
      <guid>https://blog.xuxiangyang.com/posts/diy/%E5%A6%82%E4%BD%95%E7%94%A8raspberrypi%E6%8E%A7%E5%88%B6arduino/</guid>
      <description>方案整体思路 我希望能够通过Arduino来接收感应器和控制舵机等，RaspberryPI来控制网络业务等复杂交互逻辑。Arduino就像一个超级设备，对上层业务隐藏硬件控制细节。所以 Arduino会通过USB链接到RaspberryPI，由RaspberryPI负责Arduino供电。RaspberryPI部分使用Python来做业务代码，通过Serial于Arduino交互。
环境安装   安装Arduino IDE环境
sudo apt-get install arduino   允许 pi 访问USB和串口，这里假设你的账户名称为 pi
sudo usermod -a -G dialout pi   使用Python3环境安装pySerial库
python3 -m pip install pyserial   从Arduino读取数据 我们需要编写2个设备上的代码
  编写Arduino代码
void setup() { Serial.begin(9600); } void loop() { Serial.println(&amp;#34;Hello&amp;#34;); delay(1000); }   点击Arduino IDE UpLoad，通过 Serial Monitor 应该可以看到 Hello 的输出
  编写Python代码
import serial if __name__ == &amp;#39;__main__&amp;#39;: ser = serial.</description>
    </item>
    
    <item>
      <title>使用Org写博客</title>
      <link>https://blog.xuxiangyang.com/posts/org/ox-hugo/</link>
      <pubDate>Tue, 10 Aug 2021 19:24:00 +0800</pubDate>
      
      <guid>https://blog.xuxiangyang.com/posts/org/ox-hugo/</guid>
      <description>为什么使用Org而不直接使用Github Pages Markdown  我是Emacs用户，使用Spacemacs，日常开发工作主要使用这个工具，并且Spacemacs对于Org支持度很好 Org 基本语法表达能力不弱于标准 Markdown。 Org Capture + Agenda Views 可以实现我想在任意的Emacs窗口随时管理我的 TODO、笔记等，自然的我希望博客也可以在这套体系下，关于这套多提。关于这套多提几句，它主要可以实现我如下模型  在任意的Emacs任意界面随时记录和查看TODO，随意记录后Emacs会自动帮你汇总，这样可以最大限度的降低工作中的打扰 Capture 可以自定义Template，可以满足我在不同场景下预制结构 用Capture和直接自己去编辑各个org文件是非常不同的感受，你永远不用操心写到一半的东西要保存到哪里，如果找到你写了一半的东西   我希望能有更多的控制，并且这些控制能充分利用前人经验，Github Page只是暂时的一个方案，它满足目前需求（毕竟我还没有写博客，我希望自己能定期有至少一次的深入思考），但灵活性就会有所下降，我不希望未来整个网站和Github必须绑死。  如何选取 Org 博客方案 我参考了 Blogs and Wikis with Org 最终选择了 ox-hugo ，主要考虑了如下几点：
 有丰富主题可供选择，我希望找一个简单的但是还算是有过设计的主题 使用的人要多，而且仍要在维护，这样踩坑就少 文档丰富，使用起来简单  基于以上几点过滤完，其实剩下的考虑就是在 Jekyll 和 Hugo 间了，因为以前听说过Hugo，所以就随意选择了Hugo方向了。通过尝试原生 org 感觉起来支持度不能满足我需求，并且没有如何天然配合Capture使用，所以 ox-hugo 就成了最终方案。当然，事实证明 ox-hugo 就恰恰是我想要的
如何搭建起整个博客   在Spacemacs中添加 org layer，并且启用 org-enable-hugo-support 之后重启Spacemacs
(defun dotspacemacs/layers () (setq-default dotspacemacs-configuration-layers &amp;#39;( (org :variables org-enable-github-support t ) ) ) )   安装 Hugo，已Mac为例</description>
    </item>
    
    
    
  </channel>
</rss>
